ros-noetic-variant-topic-tools (0.1.6-1focal) focal; urgency=high

  * Allow 0 in message definition
  * Contributors: Kenji Miyake

 -- Samuel Bachmann <sbachmann@anybotics.com>  Tue, 05 Jan 2021 23:00:00 -0000

ros-noetic-variant-topic-tools (0.1.5-1focal) focal; urgency=high

  * fix cmake
  * Contributors: Samuel Bachmann

 -- Samuel Bachmann <sbachmann@anybotics.com>  Thu, 22 Nov 2018 23:00:00 -0000

ros-noetic-variant-topic-tools (0.1.4-1focal) focal; urgency=high

  * fix build issue in ROS Melodic (cannot convert boost::shared_ptr to bool)
  * Fix for package and topic names containing zeros
  * Contributors: Fabian H, Samuel Bachmann, Zezao Lu

 -- Samuel Bachmann <sbachmann@anybotics.com>  Tue, 20 Nov 2018 23:00:00 -0000

ros-noetic-variant-topic-tools (0.1.3-1focal) focal; urgency=high

  * add executables to install
  * add install commands
  * Contributors: Samuel Bachmann

 -- Samuel Bachmann <sbachmann@anybotics.com>  Thu, 19 May 2016 22:00:00 -0000

ros-noetic-variant-topic-tools (0.1.2-1focal) focal; urgency=high

  * update readme with build status
  * remove cmake_modules dependency
  * Contributors: Samuel Bachmann

 -- Samuel Bachmann <sbachmann@anybotics.com>  Wed, 18 May 2016 22:00:00 -0000

ros-noetic-variant-topic-tools (0.1.1-1focal) focal; urgency=high

  * Fixes related to OS X clang compatibility
  * Fixed some issues of subscriber
  * Fixed bug in MessageDefinition::setMessageType() which was caused by a wrong order of defining the required message types of a message type
  * Added message data type member access by name
  * 
    
      * Added type name resolution for member definitions neglecting package names
      * Added receipt time to variant subscriber callback
    
  * 
    
      * Code cleanups
      * Added variant publisher and subscriber
      * Added MD5 sum calculation for variant message types
      * Updated README
    
  * Added convenience serialization methods to message class
  * Added method for serializer creation to variants
  * Basic serializer testing
  * Added numeric value access for built-in types
  * Message variant tests successful
  * Message data type now separates constant and variable members
  * Reverted templated variant value to represent actual value type
  * Refined traits, code cleanups
  * Removed SharedVariant and friend-relationship between Variant and CollectionVariant
  * Renamed some classes, code cleanups
  * 
    
      * Created test package
      * Moved test binaries to test package
    
  * Contributors: Ralf Kaestner

 -- Samuel Bachmann <sbachmann@anybotics.com>  Wed, 11 May 2016 22:00:00 -0000


